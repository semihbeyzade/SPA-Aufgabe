{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/react-todo-student-starter/src/components/Aufgabe.js\";\nimport './Aufgabe.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Aufgabe = props => {\n  var _props$farbe;\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    onChange: () => handleChanges(),\n    className: `Aufgabe ${(_props$farbe = props.farbe) !== null && _props$farbe !== void 0 ? _props$farbe : 'wennFarbeFehlt'}`,\n    style: {\n      backgroundColor: props.done ? 'gray' : 'red'\n    },\n    id: props.number,\n    onClick: () => {// funktion rufen von props, mit id (number) als parameter\n\n      /* props.aufgabeAlsErledigtMarkieren(props.number) */\n    },\n    children: [\"Deine Aufgabe Nummer \", props.number, \" ist \", props.text, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btn\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          props.aufgabeAlsErledigtMarkieren(props.number);\n        },\n        children: props.done === false ? 'erledigen' : 'zurücksetzen'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.handleRemove(props.number),\n        children: \"L\\xF6schen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.handleEdit(props.number),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Aufgabe;\nexport default Aufgabe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Aufgabe\");","map":{"version":3,"names":["Aufgabe","props","handleChanges","farbe","backgroundColor","done","number","text","aufgabeAlsErledigtMarkieren","handleRemove","handleEdit"],"sources":["/home/user/Desktop/react-todo-student-starter/src/components/Aufgabe.js"],"sourcesContent":["import './Aufgabe.css'\nconst Aufgabe = (props) => {\n  \n  return (\n  <li \n    onChange={() => handleChanges()}\n    className={`Aufgabe ${props.farbe??  'wennFarbeFehlt' }`} \n    style={{ backgroundColor:  props.done ? ('gray') : ('red')}}\n    id={props.number} \n    onClick={() => {\n      // funktion rufen von props, mit id (number) als parameter\n      /* props.aufgabeAlsErledigtMarkieren(props.number) */\n    }}\n  \n  > \n  \n  Deine Aufgabe Nummer {props.number} ist {props.text}\n  <div className='btn' >\n    <button onClick={() => {\n      props.aufgabeAlsErledigtMarkieren(props.number)\n    }} >\n      {(props.done === false)? 'erledigen' : 'zurücksetzen'}\n    </button>\n    <button onClick={() => props.handleRemove(props.number)} >\n      Löschen\n    </button>\n    <button onClick={() => props.handleEdit(props.number)} >Edit</button>\n  </div>\n  </li>\n  )\n}\n\nexport default Aufgabe\n"],"mappings":";AAAA,OAAO,eAAP;;;AACA,MAAMA,OAAO,GAAIC,KAAD,IAAW;EAAA;;EAEzB,oBACA;IACE,QAAQ,EAAE,MAAMC,aAAa,EAD/B;IAEE,SAAS,EAAG,WAAD,gBAAWD,KAAK,CAACE,KAAjB,uDAA0B,gBAAkB,EAFzD;IAGE,KAAK,EAAE;MAAEC,eAAe,EAAGH,KAAK,CAACI,IAAN,GAAc,MAAd,GAAyB;IAA7C,CAHT;IAIE,EAAE,EAAEJ,KAAK,CAACK,MAJZ;IAKE,OAAO,EAAE,MAAM,CACb;;MACA;IACD,CARH;IAAA,oCAYsBL,KAAK,CAACK,MAZ5B,WAYyCL,KAAK,CAACM,IAZ/C,eAaA;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAQ,OAAO,EAAE,MAAM;UACrBN,KAAK,CAACO,2BAAN,CAAkCP,KAAK,CAACK,MAAxC;QACD,CAFD;QAAA,UAGIL,KAAK,CAACI,IAAN,KAAe,KAAhB,GAAwB,WAAxB,GAAsC;MAHzC;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAQ,OAAO,EAAE,MAAMJ,KAAK,CAACQ,YAAN,CAAmBR,KAAK,CAACK,MAAzB,CAAvB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eASE;QAAQ,OAAO,EAAE,MAAML,KAAK,CAACS,UAAN,CAAiBT,KAAK,CAACK,MAAvB,CAAvB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QAbA;EAAA;IAAA;IAAA;IAAA;EAAA,QADA;AA2BD,CA7BD;;KAAMN,O;AA+BN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}